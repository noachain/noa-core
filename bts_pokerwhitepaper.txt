bts-poker项目需要突破的技术和知识点(具体到代码体现)：

1、资产(asset):
{
	创建：
	{
		[1]:怎样创建资产：
		{
		}
		[2]:创建资产的参数选择：
		{
		}
		[3]:如何和poker关联：
		{
		}
	}
	约束：
	{
		[1]:如何使资产公开透明：
		{
		}
		[2]:如何在资产种融入游戏的规则：
		{
		}
		[3]:资产的去中心化如何实现：
		{
		}
	}
	使用：
	{
		[1]:资产的承兑：
		{
		}
		[2]:资产如何和游戏资本进行转换：
		{
		}
		[3]:游戏动作如何和资产联动：
		{
		}
	}	
}

2、交易(transaction):
{
	创建：
	{
		[1]:怎样创建交易：
		{
		}
		[2]:交易如何扩展：
		{
		}
		[3]:怎样实现特殊类型的交易：
		{
		}
	}
	约束：
	{
		[1]:交易的安全性如何保证：
		{
		}
		[2]:如何教游戏或者资产的约束体现在交易上：
		{
		}
	}
	使用：
	{
		[1]:交易如何处理游戏的交互数据：
		{
		}
	}
}

3、常见宏(macro)：
{
	FC_ASSERT：
	{
		[1]:作用是什么：
		{
		}
		[2]:使用场景是什么：
		{
		}
		[3]:是否可以替代：
		{
		}
		[4]:浅显的语法作展开：
		{
		}
	}
	
	INVOKE_IN_IMPL:
	{
		[1]:作用是什么：
		{
		}
		[2]:使用场景是什么：
		{
		}
		[3]:是否可以替代：
		{
		}
		[4]:浅显的语法作展开：
		{
		}
	}
	
	FC_REFLEC:
	{
		[1]:作用是什么：
		{
		}
		[2]:使用场景是什么：
		{
		}
		[3]:是否可以替代：
		{
		}
		[4]:浅显的语法作展开：
		{
		}
	}
	
	FC_REFLECT_EMPTY:
	{
		[1]:作用是什么：
		{
		}
		[2]:使用场景是什么：
		{
		}
		[3]:是否可以替代：
		{
		}
		[4]:浅显的语法作展开：
		{
		}
	}
	
	FC_REFLECT_ENUM:
	{
		[1]:作用是什么：
		{
		}
		[2]:使用场景是什么：
		{
		}
		[3]:是否可以替代：
		{
		}
		[4]:浅显的语法作展开：
		{
		}
	}
	
}
